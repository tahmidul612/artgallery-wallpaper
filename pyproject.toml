[project]
name = "artgallery-wallpaper"
version = "0.0.1"
description = "A python application that generates framed wallpapers from artwork"
readme = "README.md"
requires-python = ">=3.9,<3.12"
dependencies = [
    # Core ML packages - use compatible versions
    "torch>=2.1.0,<2.2.0",  # Stable PyTorch version
    "torchvision>=0.16.0,<0.17.0",  # Compatible with torch 2.1

    # Diffusers ecosystem - use known compatible set
    "diffusers==0.25.0",  # Stable version with good compatibility
    "transformers==4.36.2",  # Works well with diffusers 0.25.0
    "accelerate==0.25.0",  # Compatible with numpy<2.0
    "safetensors>=0.4.0",
    "huggingface-hub>=0.20.0,<0.21.0",

    # Image processing - use compatible versions
    "opencv-python==4.9.0.80",  # Last version that supports numpy<2.0
    "pillow>=10.0.0",

    # CLI and utilities
    "rich>=13.0.0",
    "typer>=0.9.0",

    # Additional dependencies
    "numpy>=1.24.0,<2.0.0",  # Explicitly pin numpy to avoid conflicts
    "sentencepiece>=0.1.99",  # For tokenizers
    "xformers>=0.0.23",  # Optional but recommended for memory efficiency
]

authors = [
    {name = "Tahmidul Islam", email = "me@tahmidul612.com"},
]
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
[project.urls]
Homepage = "https://github.com/tahmidul612/artgallery-wallpaper"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$major.$minor.$patch$prerelease"
version_scheme = "semver2"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true
